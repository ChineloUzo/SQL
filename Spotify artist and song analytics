# For this project, I downloaded Spotify data from Kaggle.
# I created a table to insert the Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1. I determined the average danceability and popularity by the artist and track.
SELECT artist_name,
track_name,
AVG(danceability),
AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name ,track_name


#2. I determined the top ten tracks by popularity.
SELECT artist_name,
track_name,
popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc LIMIT 10


#3. I then determined the longest track by duration.
SELECT artist_name,
track_name,
duration_ms
FROM  BIT_DB.Spotifydata
ORDER BY duration_ms desc LIMIT 1


#4. Lastly I determined the 5 least danceable songs and their popularity.
SELECT artist_name,
track_name,
danceability,
popularity
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY danceability asc LIMIT 5
